/*
------------------------------------------------
Generated by Cradle 2.0.1.0
https://github.com/daterre/Cradle

Original file: MyStory.html
Story format: Harlowe
------------------------------------------------
*/

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using Cradle;
using IStoryThread = System.Collections.Generic.IEnumerable<Cradle.StoryOutput>;
using Cradle.StoryFormats.Harlowe;

public partial class @MyStory: Cradle.StoryFormats.Harlowe.HarloweStory
{
	#region Variables
	// ---------------

	public class VarDefs: RuntimeVars
	{
		public VarDefs()
		{
			VarDef("confrontTheMayor", () => this.@confrontTheMayor, val => this.@confrontTheMayor = val);
			VarDef("mission1Complete", () => this.@mission1Complete, val => this.@mission1Complete = val);
		}

		public StoryVar @confrontTheMayor;
		public StoryVar @mission1Complete;
	}

	public new VarDefs Vars
	{
		get { return (VarDefs) base.Vars; }
	}

	// ---------------
	#endregion

	#region Initialization
	// ---------------

	public readonly Cradle.StoryFormats.Harlowe.HarloweRuntimeMacros macros1;

	@MyStory()
	{
		this.StartPassage = "Claudelius";

		base.Vars = new VarDefs() { Story = this, StrictMode = true };

		macros1 = new Cradle.StoryFormats.Harlowe.HarloweRuntimeMacros() { Story = this };

		base.Init();
		passage1_Init();
		passage2_Init();
		passage3_Init();
		passage4_Init();
		passage5_Init();
		passage6_Init();
		passage7_Init();
		passage8_Init();
		passage9_Init();
		passage10_Init();
		passage11_Init();
		passage12_Init();
	}

	// ---------------
	#endregion

	// .............
	// #1: Claudelius

	void passage1_Init()
	{
		this.Passages[@"Claudelius"] = new StoryPassage(@"Claudelius", new string[]{  }, passage1_Main);
	}

	IStoryThread passage1_Main()
	{
		yield return text("Hello old friend!");
		yield return lineBreak();
		yield return text("Thanks for coming to help.");
		yield return lineBreak();
		yield return text("My friend Alf went missing and the people in the town started to act strange... ");
		Vars.confrontTheMayor  = false;
		yield return lineBreak();
		yield return link("Who is acting strange? ", "Strange People", null);
		yield return lineBreak();
		yield return link("Do you have a direction to start with? ", "First Mission Intro", null);
		yield return lineBreak();
		yield return link("Tell me about Alf ", "About Alf", null);
		yield break;
	}


	// .............
	// #2: Strange People

	void passage2_Init()
	{
		this.Passages[@"Strange People"] = new StoryPassage(@"Strange People", new string[]{  }, passage2_Main);
	}

	IStoryThread passage2_Main()
	{
		yield return text("I don't want to start with accusations...");
		yield return lineBreak();
		yield return link("Ok... I'm ready to start ", "First Mission Intro", null);
		yield return lineBreak();
		yield return link("Tell me about Alf ", "About Alf", null);
		yield break;
	}


	// .............
	// #3: First Mission Intro

	void passage3_Init()
	{
		this.Passages[@"First Mission Intro"] = new StoryPassage(@"First Mission Intro", new string[]{  }, passage3_Main);
	}

	IStoryThread passage3_Main()
	{
		yield return text("I was looking at Alfs' house and discover a weird passage in his basement.");
		yield return lineBreak();
		yield return text("When I went in I discover a whole underground area.");
		yield return lineBreak();
		yield return text("The shpae... it looked familiar I... I search In the books and found what it means.");
		yield return lineBreak();
		yield return link("Tell me more ", "BSP Rooms And RPC", null);
		yield break;
	}


	// .............
	// #4: About Alf

	void passage4_Init()
	{
		this.Passages[@"About Alf"] = new StoryPassage(@"About Alf", new string[]{  }, passage4_Main);
	}

	IStoryThread passage4_Main()
	{
		yield return text("Alf is the chef of the town and a good friend of mine.");
		yield return lineBreak();
		yield return text("After he didn't open his shop in the morning I went to look for him but couldn't find him anywhere.");
		yield return lineBreak();
		yield return link("Ok... I'm ready to start ", "First Mission Intro", null);
		yield return lineBreak();
		yield return link("Are there any suspects? ", "Strange People", null);
		yield break;
	}


	// .............
	// #5: BSP Rooms And RPC

	void passage5_Init()
	{
		this.Passages[@"BSP Rooms And RPC"] = new StoryPassage(@"BSP Rooms And RPC", new string[]{  }, passage5_Main);
	}

	IStoryThread passage5_Main()
	{
		yield return text("It looks like Binary Space Partitioning for rooms with Random Point Connect.");
		yield return lineBreak();
		yield return link("Binary Space Partitioning for rooms? ", "BSP Rooms", null);
		yield return lineBreak();
		yield return link("Random Point Connect? ", "RPC", null);
		yield break;
	}


	// .............
	// #6: BSP Rooms

	void passage6_Init()
	{
		this.Passages[@"BSP Rooms"] = new StoryPassage(@"BSP Rooms", new string[]{  }, passage6_Main);
	}

	IStoryThread passage6_Main()
	{
		yield return text("It Works by dividing the map into a series of rectangles, and then placing a room in each one on the map. The rectangle can be split either vertically or horizontally, and the minimum size of the split is determined based on the minimum size of the rooms.");
		yield return lineBreak();
		yield return link("Random Point Connect? ", "RPC", null);
		yield return lineBreak();
		yield return link("Ok I think I'm raedy ", "First Mission", null);
		yield break;
	}


	// .............
	// #7: RPC

	void passage7_Init()
	{
		this.Passages[@"RPC"] = new StoryPassage(@"RPC", new string[]{  }, passage7_Main);
	}

	IStoryThread passage7_Main()
	{
		yield return text("Algorithm that works by first iterating through the list of rooms created by the room generation algorithm.  For each corridor it draws, it selects a random point at the edge of each of the rooms and connects. If the points are parallel, the algorithm will draw a straight corridor in the appropriate vertical or horizontal direction. If the points are not parallel, the algorithm will draw a forked corridor made up of three straight corridors in order to connect the points.");
		yield return lineBreak();
		yield return link("Binary Space Partitioning for rooms? ", "BSP Rooms", null);
		yield return lineBreak();
		yield return link("Ok I think I'm raedy ", "First Mission", null);
		yield break;
	}


	// .............
	// #8: First Mission

	void passage8_Init()
	{
		this.Passages[@"First Mission"] = new StoryPassage(@"First Mission", new string[]{  }, passage8_Main);
	}

	IStoryThread passage8_Main()
	{
		yield return text("Go to Alf's house right here behind the mayor's back.");
		yield return lineBreak();
		yield return text("Search for Alf and return with more details...");
		yield return lineBreak();
		Vars.mission1Complete  = false;
		yield return lineBreak();
		if(Vars.mission1Complete == true) {
			yield return lineBreak();
			yield return text("	");
			yield return link("I found Alf... ", "Mission 1 Completed", null);
			yield return lineBreak();
		}
		yield break;
	}


	// .............
	// #9: Mission 1 Completed

	void passage9_Init()
	{
		this.Passages[@"Mission 1 Completed"] = new StoryPassage(@"Mission 1 Completed", new string[]{  }, passage9_Main);
	}

	IStoryThread passage9_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #10: The Mayor

	void passage10_Init()
	{
		this.Passages[@"The Mayor"] = new StoryPassage(@"The Mayor", new string[]{  }, passage10_Main);
	}

	IStoryThread passage10_Main()
	{
		yield return text("Hello traveler!");
		yield return lineBreak();
		yield return text("My name is Granny Iga and I'm the mayor of this beautiful town.");
		yield return lineBreak();
		yield return text("What brings you here?");
		yield return lineBreak();
		yield return link("I heard someone went missing ", "Mayor Default Answer", null);
		yield return lineBreak();
		yield return link("Lie ", "Mayor Default Answer", null);
		yield return lineBreak();
		if(Vars.confrontTheMayor == true) {
			yield return lineBreak();
			yield return text("	");
			yield return link("I know the truth about you! ", "Mayor Exposed", null);
			yield return lineBreak();
		}
		yield break;
	}


	// .............
	// #11: Mayor Default Answer

	void passage11_Init()
	{
		this.Passages[@"Mayor Default Answer"] = new StoryPassage(@"Mayor Default Answer", new string[]{  }, passage11_Main);
	}

	IStoryThread passage11_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


	// .............
	// #12: Mayor Exposed

	void passage12_Init()
	{
		this.Passages[@"Mayor Exposed"] = new StoryPassage(@"Mayor Exposed", new string[]{  }, passage12_Main);
	}

	IStoryThread passage12_Main()
	{
		yield return text("Double-click this passage to edit it.");
		yield break;
	}


}